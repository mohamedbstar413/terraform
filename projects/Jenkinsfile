pipeline {
    agent any
    environment {
        GIT_REPO_URL = 'https://github.com/mohamedbstar413/terraform'
    }
    stages {
        stage('pull code') {
            steps {
                git branch: 'main', url: "${GIT_REPO_URL}"
            }
        }

        stage('terraform init and plan') {
            steps {
                dir('projects/book-review-app/infra') {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',
                          credentialsId: 'aws']]) {
                        sh '''
                    terraform init
                    terraform plan
                '''
                          }
                }
            }
        }

        stage('build the react code') {
            steps {
                dir('projects/book-review-app/infra/application/frontend') {
                    sh 'npm run build'
                }
            }
        }

        stage('copy lb_dns.txt file into build directory') {
            steps {
                dir('projects/book-review-app/infra/application/frontend') {
                    sh 'cp lb_dns.txt build/lb_dns.txt'
                }
            }
        }

        stage('run terraform apply') {
            steps {
                dir('projects/book-review-app/infra') {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',
                          credentialsId: 'aws']]) {
                        sh '''
                    terraform apply --auto-approve
                '''
                          }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed (success or failure). Cleaning workspace...'
            cleanWs()
        }

        success {
            echo '✅ Pipeline completed successfully!'
        }

        failure {
            echo '❌ Pipeline failed. Please check the logs above for details.'
        }
    }
}
